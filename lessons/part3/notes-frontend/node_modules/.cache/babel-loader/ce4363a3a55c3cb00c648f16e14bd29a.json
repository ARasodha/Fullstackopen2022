{"ast":null,"code":"import axios from'axios';var baseUrl='https://young-temple-54629.herokuapp.com/api/notes';// const getAll = () => {\n//   const request = axios.get(baseUrl);\n//   return request.then(response => response.data);\n// }\n// Temporarily used to implement catch method in App component\nvar getAll=function getAll(){var request=axios.get(baseUrl);var nonExisting={id:10000,content:'This note is not saved to server',date:'2019-05-30T17:30:31.098Z',important:true};return request.then(function(response){return response.data.concat(nonExisting);});};var create=function create(newObject){var request=axios.post(baseUrl,newObject);return request.then(function(response){return response.data;});};var update=function update(id,newObject){var request=axios.put(\"\".concat(baseUrl,\"/\").concat(id),newObject);return request.then(function(response){return response.data;});};var noteService={getAll:getAll,create:create,update:update};export default noteService;","map":{"version":3,"sources":["/Users/arjunrasodha/Documents/fullstackopen2022/lessons/part3/notes-frontend/src/services/notes.js"],"names":["axios","baseUrl","getAll","request","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put","noteService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,oDAAhB,CAEA;AACA;AACA;AACA;AAEA;AACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB,CACA,GAAMI,CAAAA,WAAW,CAAG,CAClBC,EAAE,CAAE,KADc,CAElBC,OAAO,CAAE,kCAFS,CAGlBC,IAAI,CAAE,0BAHY,CAIlBC,SAAS,CAAE,IAJO,CAApB,CAMA,MAAON,CAAAA,OAAO,CAACO,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBR,WAArB,CAAJ,EAArB,CAAP,CACD,CATD,CAWA,GAAMS,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,SAAS,CAAI,CAC1B,GAAMZ,CAAAA,OAAO,CAAGH,KAAK,CAACgB,IAAN,CAAWf,OAAX,CAAoBc,SAApB,CAAhB,CACA,MAAOZ,CAAAA,OAAO,CAACO,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACX,EAAD,CAAKS,SAAL,CAAmB,CAChC,GAAMZ,CAAAA,OAAO,CAAGH,KAAK,CAACkB,GAAN,WAAajB,OAAb,aAAwBK,EAAxB,EAA8BS,SAA9B,CAAhB,CACA,MAAOZ,CAAAA,OAAO,CAACO,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,GAAIO,CAAAA,WAAW,CAAG,CAChBjB,MAAM,CAANA,MADgB,CAEhBY,MAAM,CAANA,MAFgB,CAGhBG,MAAM,CAANA,MAHgB,CAAlB,CAMA,cAAeE,CAAAA,WAAf","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'https://young-temple-54629.herokuapp.com/api/notes';\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl);\n//   return request.then(response => response.data);\n// }\n\n// Temporarily used to implement catch method in App component\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n}\n\nlet noteService = {\n  getAll,\n  create,\n  update\n}\n\nexport default noteService;"]},"metadata":{},"sourceType":"module"}